apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-backend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-backend
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Release.Name }}-postgres-service:5432/$(POSTGRES_DB)"
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.existingSecret }}
                  key: POSTGRES_DB
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.existingSecret }}
                  key: POSTGRES_USER
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.existingSecret }}
                  key: POSTGRES_PASSWORD
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.backend.springProfile }}"
            - name: APP_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.existingSecret }}
                  key: APP_JWT_SECRET
          volumeMounts:
            - name: media-storage
              mountPath: /media
      volumes:
        - name: media-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-media-pvc